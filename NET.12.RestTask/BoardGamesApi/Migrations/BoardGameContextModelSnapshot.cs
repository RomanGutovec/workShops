// <auto-generated />
using System;
using BoardGamesApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoardGamesApi.Migrations
{
    [DbContext(typeof(BoardGameContext))]
    partial class BoardGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoardGamesApi.Models.BoardGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BoardGames");

                    b.HasData(
                        new { Id = 1, Created = new DateTime(2019, 3, 13, 14, 9, 7, 305, DateTimeKind.Local), Description = "The classic board games like Monopoly.", Modified = new DateTime(2019, 3, 13, 11, 9, 7, 305, DateTimeKind.Utc), Name = "Wingspan" },
                        new { Id = 2, Created = new DateTime(2019, 3, 13, 14, 9, 7, 306, DateTimeKind.Local), Description = "The best asymmetric strategy board game of the decade.", Modified = new DateTime(2019, 3, 13, 11, 9, 7, 306, DateTimeKind.Utc), Name = "Root" },
                        new { Id = 3, Created = new DateTime(2019, 3, 13, 14, 9, 7, 306, DateTimeKind.Local), Description = "Exceptional deck-building word game.", Modified = new DateTime(2019, 3, 13, 11, 9, 7, 306, DateTimeKind.Utc), Name = "Hardback" },
                        new { Id = 4, Created = new DateTime(2019, 3, 13, 14, 9, 7, 306, DateTimeKind.Local), Description = "The brilliant abstract game for two to five players.", Modified = new DateTime(2019, 3, 13, 11, 9, 7, 306, DateTimeKind.Utc), Name = "Azul" },
                        new { Id = 5, Created = new DateTime(2019, 3, 13, 14, 9, 7, 306, DateTimeKind.Local), Description = "This is basically Jurassic Park: The Game, in all its '80s glory.", Modified = new DateTime(2019, 3, 13, 11, 9, 7, 306, DateTimeKind.Utc), Name = "Dinosaur Island" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
